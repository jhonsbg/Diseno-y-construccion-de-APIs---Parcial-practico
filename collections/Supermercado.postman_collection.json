{
	"info": {
		"_postman_id": "dd22a72c-18c2-4e4a-a65d-6aebf36f8ff7",
		"name": "Supermercado",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5948530"
	},
	"item": [
		{
			"name": "Crear un supermercado válido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"supermercado_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Carrefour\",\r\n    \"longitude\": -34.674631469417946,\r\n    \"latitude\": -58.45817079535366,\r\n    \"web\": \"https://www.carrefour.com.ar/\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un supermercado inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Carrefour\",\r\n    \"longitude\": -34.674631469417946,\r\n    \"latitude\": -58.45817079535366,\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los supermercados",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of supermarkets > ' + 0, function () {\r",
							"    var data = pm.response.json()\r",
							"    pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un supermercado por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/supermarkets/{{supermarketId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						"{{supermarketId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un supermercado por un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"The supermarket with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/supermarkets/{{supermarketId_noValid}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						"{{supermarketId_noValid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un supermercado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"New Carrefour\",\r\n    \"longitude\": -34.6746,\r\n    \"latitude\": -58.4582,\r\n    \"web\": \"https://www.carrefour.com.ar/\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets/{{supermarketId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						"{{supermarketId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un supermercado con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"The supermarket with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"New Carrefour\",\r\n    \"longitude\": -34.6746,\r\n    \"latitude\": -58.4582,\r\n    \"web\": \"https://www.carrefour.com.ar/\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets/{{supermarketId_noValid}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						"{{supermarketId_noValid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/supermarkets/{{supermarketId_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						"{{supermarketId_2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"The supermarket with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/supermarkets/{{supermarketId_noValid}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						"{{supermarketId_noValid}}"
					]
				}
			},
			"response": []
		}
	]
}